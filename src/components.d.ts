/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  EventEmitter,
} from '@stencil/core';


export namespace Components {

  interface SmoothlyInputRadio {
    'checked': boolean;
    'name': string;
    'tabIndex': number;
    'value': string;
  }
  interface SmoothlyInputRadioAttributes extends StencilHTMLAttributes {
    'checked'?: boolean;
    'name'?: string;
    'tabIndex'?: number;
    'value'?: string;
  }

  interface SmoothlyInput {
    'class': { [name: string]: boolean };
    'inputMode': string;
    'mandatory': boolean;
    'maxLength'?: number;
    'name': string;
    'placeholder'?: string;
    'tabIndex': number;
    'type': "text" | "email";
    'valid': boolean;
    'value': string;
  }
  interface SmoothlyInputAttributes extends StencilHTMLAttributes {
    'class'?: { [name: string]: boolean };
    'inputMode'?: string;
    'mandatory'?: boolean;
    'maxLength'?: number;
    'name'?: string;
    'onChanged'?: (event: CustomEvent<SmoothlyInput>) => void;
    'placeholder'?: string;
    'tabIndex'?: number;
    'type'?: "text" | "email";
    'valid'?: boolean;
    'value'?: string;
  }

  interface SmoothlySpinner {
    'active': boolean;
  }
  interface SmoothlySpinnerAttributes extends StencilHTMLAttributes {
    'active'?: boolean;
  }

  interface SmoothlySubmit {
    'processing': boolean;
  }
  interface SmoothlySubmitAttributes extends StencilHTMLAttributes {
    'onSubmit'?: (event: CustomEvent<{ [key: string]: string }>) => void;
    'processing'?: boolean;
  }
}

declare global {
  interface StencilElementInterfaces {
    'SmoothlyInputRadio': Components.SmoothlyInputRadio;
    'SmoothlyInput': Components.SmoothlyInput;
    'SmoothlySpinner': Components.SmoothlySpinner;
    'SmoothlySubmit': Components.SmoothlySubmit;
  }

  interface StencilIntrinsicElements {
    'smoothly-input-radio': Components.SmoothlyInputRadioAttributes;
    'smoothly-input': Components.SmoothlyInputAttributes;
    'smoothly-spinner': Components.SmoothlySpinnerAttributes;
    'smoothly-submit': Components.SmoothlySubmitAttributes;
  }


  interface HTMLSmoothlyInputRadioElement extends Components.SmoothlyInputRadio, HTMLStencilElement {}
  var HTMLSmoothlyInputRadioElement: {
    prototype: HTMLSmoothlyInputRadioElement;
    new (): HTMLSmoothlyInputRadioElement;
  };

  interface HTMLSmoothlyInputElement extends Components.SmoothlyInput, HTMLStencilElement {}
  var HTMLSmoothlyInputElement: {
    prototype: HTMLSmoothlyInputElement;
    new (): HTMLSmoothlyInputElement;
  };

  interface HTMLSmoothlySpinnerElement extends Components.SmoothlySpinner, HTMLStencilElement {}
  var HTMLSmoothlySpinnerElement: {
    prototype: HTMLSmoothlySpinnerElement;
    new (): HTMLSmoothlySpinnerElement;
  };

  interface HTMLSmoothlySubmitElement extends Components.SmoothlySubmit, HTMLStencilElement {}
  var HTMLSmoothlySubmitElement: {
    prototype: HTMLSmoothlySubmitElement;
    new (): HTMLSmoothlySubmitElement;
  };

  interface HTMLElementTagNameMap {
    'smoothly-input-radio': HTMLSmoothlyInputRadioElement
    'smoothly-input': HTMLSmoothlyInputElement
    'smoothly-spinner': HTMLSmoothlySpinnerElement
    'smoothly-submit': HTMLSmoothlySubmitElement
  }

  interface ElementTagNameMap {
    'smoothly-input-radio': HTMLSmoothlyInputRadioElement;
    'smoothly-input': HTMLSmoothlyInputElement;
    'smoothly-spinner': HTMLSmoothlySpinnerElement;
    'smoothly-submit': HTMLSmoothlySubmitElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
